"use strict";(self["webpackChunkmy_project"]=self["webpackChunkmy_project"]||[]).push([[1329],{5856:function(t,e,i){i.d(e,{Z:function(){return g}});var n,s=i(36663),l=i(70375),r=i(72285),o=i(67134),a=i(13802),h=i(61681),c=i(81977),f=i(69236),u=i(40266);class p{constructor(t=null,e=null,i=null){this.minValue=t,this.maxValue=e,this.noDataValue=i}}let x=n=class extends r.wq{constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.statistics=null}static createEmptyBand(t,e){return new(n.getPixelArrayConstructor(t))(e)}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){return this.pixels?.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new l.Z("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new p)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map((t=>this._calculateBandStatistics(t,this.mask)));const t=this.mask;let e=0;if((0,h.pC)(t))for(let i=0;i<t.length;i++)t[i]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||"f64"===t||"f32"===t||!this.pixels)return;let e;switch(t){case"u8":e=[0,255];break;case"u16":e=[0,65535];break;case"u32":e=[0,4294967295];break;case"s8":e=[-128,127];break;case"s16":e=[-32768,32767];break;case"s32":e=[-2147483648,2147483647];break;default:e=[-34e38,34e38]}const[i,s]=e,l=this.pixels,r=this.width*this.height,o=l.length;let a,h,c;const f=[];for(let u=0;u<o;u++){c=n.createEmptyBand(t,r),a=l[u];for(let t=0;t<r;t++)h=a[t],c[t]=h>s?s:h<i?i:h;f.push(c)}this.pixels=f,this.pixelType=t}extractBands(t){const{pixels:e,statistics:i}=this;if((0,h.Wi)(t)||0===t.length||!e||0===e.length)return this;const s=e.length,l=t.some((t=>t>=e.length)),r=s===t.length&&!t.some(((t,e)=>t!==e));return l||r?this:new n({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>e[t])),statistics:i&&t.map((t=>i[t]))})}clone(){const t=new n({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;(0,h.pC)(this.mask)&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0));const i=n.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const n=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=n?this.pixels[e].slice(0,this.pixels[e].length):new i(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=(0,o.d9)(this.statistics[e]);return t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:i,pixels:n}=this;if(!t||!n||!n.length)return void a.Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let s,l,r,o;s=l=r=n[0],n.length>=3?(l=n[1],r=n[2]):2===n.length&&(l=n[1]);const c=new Uint32Array(t),f=this.width*this.height;if(s.length===f)if((0,h.pC)(e)&&e.length===f)if(i)for(o=0;o<f;o++)e[o]&&(c[o]=e[o]<<24|r[o]<<16|l[o]<<8|s[o]);else for(o=0;o<f;o++)e[o]&&(c[o]=255<<24|r[o]<<16|l[o]<<8|s[o]);else for(o=0;o<f;o++)c[o]=255<<24|r[o]<<16|l[o]<<8|s[o];else a.Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:i,statistics:n}=this;if(!t||!e||!e.length)return void a.Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const s=this.pixelType;let l=1,r=0,o=1;if(n&&n.length>0){for(const t of n)if(null!=t.minValue&&(r=Math.min(r,t.minValue)),null!=t.maxValue&&null!=t.minValue){const e=t.maxValue-t.minValue;o=Math.max(o,e)}l=255/o}else{let t=255;"s8"===s?(r=-128,t=127):"u16"===s?t=65535:"s16"===s?(r=-32768,t=32767):"u32"===s?t=4294967295:"s32"===s?(r=-2147483648,t=2147483647):"f32"===s?(r=-34e38,t=34e38):"f64"===s&&(r=-Number.MAX_VALUE,t=Number.MAX_VALUE),l=255/(t-r)}const c=new Uint32Array(t),f=this.width*this.height;let u,p,x,g,d;if(u=p=x=e[0],u.length!==f)return a.Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(p=e[1],e.length>=3&&(x=e[2]),(0,h.pC)(i)&&i.length===f)for(g=0;g<f;g++)i[g]&&(c[g]=255<<24|(x[g]-r)*l<<16|(p[g]-r)*l<<8|(u[g]-r)*l);else for(g=0;g<f;g++)c[g]=255<<24|(x[g]-r)*l<<16|(p[g]-r)*l<<8|(u[g]-r)*l;else if((0,h.pC)(i)&&i.length===f)for(g=0;g<f;g++)d=(u[g]-r)*l,i[g]&&(c[g]=255<<24|d<<16|d<<8|d);else for(g=0;g<f;g++)d=(u[g]-r)*l,c[g]=255<<24|d<<16|d<<8|d}_fillFrom32Bit(t){const{pixels:e,mask:i}=this;if(!t||!e||!e.length)return a.Z.getLogger(this.declaredClass).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let n,s,l,r;n=s=l=e[0],e.length>=3?(s=e[1],l=e[2]):2===e.length&&(s=e[1]);const o=this.width*this.height;if(n.length!==o)return a.Z.getLogger(this.declaredClass).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let c=0;if((0,h.pC)(i)&&i.length===o)for(r=0;r<o;r++)t[c++]=n[r],t[c++]=s[r],t[c++]=l[r],t[c++]=1&i[r];else for(r=0;r<o;r++)t[c++]=n[r],t[c++]=s[r],t[c++]=l[r],t[c++]=1}_calculateBandStatistics(t,e){let i=1/0,n=-1/0;const s=t.length;let l,r=0;if((0,h.pC)(e))for(l=0;l<s;l++)e[l]&&(r=t[l],i=r<i?r:i,n=r>n?r:n);else for(l=0;l<s;l++)r=t[l],i=r<i?r:i,n=r>n?r:n;return new p(i,n)}};(0,s._)([(0,c.Cb)({json:{write:!0}})],x.prototype,"width",void 0),(0,s._)([(0,c.Cb)({json:{write:!0}})],x.prototype,"height",void 0),(0,s._)([(0,c.Cb)({json:{write:!0}})],x.prototype,"pixelType",void 0),(0,s._)([(0,f.p)("pixelType")],x.prototype,"castPixelType",null),(0,s._)([(0,c.Cb)({json:{write:!0}})],x.prototype,"validPixelCount",void 0),(0,s._)([(0,c.Cb)({json:{write:!0}})],x.prototype,"mask",void 0),(0,s._)([(0,c.Cb)({json:{write:!0}})],x.prototype,"maskIsAlpha",void 0),(0,s._)([(0,c.Cb)({json:{write:!0}})],x.prototype,"pixels",void 0),(0,s._)([(0,c.Cb)({json:{write:!0}})],x.prototype,"statistics",void 0),x=n=(0,s._)([(0,u.j)("esri.layers.support.PixelBlock")],x);const g=x},31329:function(t,e,i){i.d(e,{CD:function(){return s},DX:function(){return n},Gd:function(){return h},Kh:function(){return b},Pz:function(){return c},Qh:function(){return G},SJ:function(){return f},Uk:function(){return I},Vl:function(){return R},XV:function(){return u},a2:function(){return g},nA:function(){return A},nk:function(){return o},oB:function(){return k},pW:function(){return B},qF:function(){return a},sS:function(){return w},us:function(){return T},zp:function(){return x}});var n,s,l=i(61681),r=i(5856);function o(t){return(0,l.pC)(t)&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function a(t,e){if(!e?.length||!o(t))return t;const i=t.pixels.length;return e&&e.some((t=>t>=i))||1===i&&1===e.length&&0===e[0]?t:i!==e.length||e.some(((t,e)=>t!==e))?new r.Z({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map((e=>t.pixels[e])),statistics:t.statistics&&e.map((e=>t.statistics[e]))}):t}function h(t){if(!t?.length||t.some((t=>!o(t))))return null;if(1===t.length)return(0,l.pC)(t[0])?t[0].clone():null;const e=t,{width:i,height:n,pixelType:s}=e[0];if(e.some((t=>t.width!==i||t.height!==n)))return null;const a=e.map((({mask:t})=>t)).filter((t=>null!=t));let h=null;a.length&&(h=new Uint8Array(i*n),h.set(a[0]),a.length>1&&y(a.slice(1),h));const c=[];e.forEach((({pixels:t})=>c.push(...t)));const f=e.map((({statistics:t})=>t)).filter((t=>t?.length)),u=[];return f.forEach((t=>u.push(...t))),new r.Z({pixelType:s,width:i,height:n,mask:h,pixels:c,statistics:u.length?u:null})}function c(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const i=e.sort(((t,e)=>t[0]-e[0]));let n=0;i[0][0]<0&&(n=i[0][0]);const s=Math.max(256,i[i.length-1][0]-n+1),l=new Uint8Array(4*s),r=[];let o,a=0,h=0;const c=5===i[0].length;if(s>65536)return i.forEach((t=>{r[t[0]-n]=c?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:r,offset:n,alphaSpecified:c};if(t.fillUnspecified)for(o=i[h],a=o[0]-n;a<s;a++)l[4*a]=o[1],l[4*a+1]=o[2],l[4*a+2]=o[3],l[4*a+3]=c?o[4]:255,a===o[0]-n&&(o=h===i.length-1?o:i[++h]);else for(a=0;a<i.length;a++)o=i[a],h=4*(o[0]-n),l[h]=o[1],l[h+1]=o[2],l[h+2]=o[3],l[h+3]=c?o[4]:255;return{indexedColormap:l,offset:n,alphaSpecified:c}}function f(t,e){if(!o(t))return t;if(!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const i=t.clone(),n=i.pixels;let s=i.mask;const r=i.width*i.height;if(1!==n.length)return t;const{indexedColormap:a,indexed2DColormap:h,offset:c,alphaSpecified:f}=e;let u=0;const p=n[0],x=new Uint8Array(p.length),g=new Uint8Array(p.length),d=new Uint8Array(p.length);let m,y=0;if(a){const t=a.length-1;if((0,l.pC)(s))for(u=0;u<r;u++)s[u]&&(y=4*(p[u]-c),y<c||y>t?s[u]=0:(x[u]=a[y],g[u]=a[y+1],d[u]=a[y+2],s[u]=a[y+3]));else{for(s=new Uint8Array(r),u=0;u<r;u++)y=4*(p[u]-c),y<c||y>t?s[u]=0:(x[u]=a[y],g[u]=a[y+1],d[u]=a[y+2],s[u]=a[y+3]);i.mask=s}}else if(h)if((0,l.pC)(s))for(u=0;u<r;u++)s[u]&&(m=h[p[u]],x[u]=m[0],g[u]=m[1],d[u]=m[2],s[u]=m[3]);else{for(s=new Uint8Array(r),u=0;u<r;u++)m=h[p[u]],x[u]=m[0],g[u]=m[1],d[u]=m[2],s[u]=m[3];i.mask=s}return i.pixels=[x,g,d],i.statistics=null,i.pixelType="u8",i.maskIsAlpha=f,i}function u(t,e){if(!o(t))return null;const{pixels:i,mask:n}=t,s=i.length;let l=e.lut;const{offset:a}=e;l&&1===l[0].length&&(l=i.map((()=>l)));const h=[],c=e.outputPixelType||"u8";for(let r=0;r<s;r++){const t=p(i[r],n,l[r],a||0,c);h.push(t)}const f=new r.Z({width:t.width,height:t.height,pixels:h,mask:n,pixelType:c});return f.updateStatistics(),f}function p(t,e,i,n,s){const l=t.length,o=r.Z.createEmptyBand(s,l);if(e)for(let r=0;r<l;r++)e[r]&&(o[r]=i[t[r]-n]);else for(let r=0;r<l;r++)o[r]=i[t[r]-n];return o}function x(t,e){if(!o(t))return null;const i=t.clone(),{pixels:n}=i,s=i.width*i.height,l=e.length,r=Math.floor(l/2),a=e[Math.floor(r)],h=n[0];let c,f,u,p,x,g,d=!1;const m=new Uint8Array(s),y=new Uint8Array(s),w=new Uint8Array(s);let k=i.mask;const A=4===e[0].mappedColor.length;for(k||(k=new Uint8Array(s),k.fill(A?255:1),i.mask=k),x=0;x<s;x++)if(k[x]){for(c=h[x],d=!1,g=r,f=a,u=0,p=l-1;p-u>1;){if(c===f.value){d=!0;break}c>f.value?u=g:p=g,g=Math.floor((u+p)/2),f=e[Math.floor(g)]}d||(c===e[u].value?(f=e[u],d=!0):c===e[p].value?(f=e[p],d=!0):c<e[u].value?(d=!1,f=null):c>e[u].value&&(c<e[p].value?(f=e[u],d=!0):p===l-1?(d=!1,f=null):(f=e[p],d=!0))),d?(m[x]=f.mappedColor[0],y[x]=f.mappedColor[1],w[x]=f.mappedColor[2],k[x]=f.mappedColor[3]):m[x]=y[x]=w[x]=k[x]=0}return i.pixels=[m,y,w],i.mask=k,i.pixelType="u8",i.maskIsAlpha=A,i}function g(t,e){if(!o(t))return null;const{width:i,height:n}=t,{inputRanges:s,outputValues:l,outputPixelType:a,noDataRanges:h,allowUnmatched:c}=e,f=t.pixels[0],u=r.Z.createEmptyBand(a,f.length);c&&u.set(f);const p=t.mask,x=s.length/2;for(let r=0;r<n;r++)for(let t=0;t<i;t++){const e=r*i+t;if(!p||p[e]){const t=f[e];for(let i=x-1;i>=0;i--)if(t>=s[2*i]&&t<=s[2*i+1]){u[e]=l[i];break}}}let g=p;if(h?.length){g=new Uint8Array(i*n),p&&g.set(p);for(let t=0;t<n;t++)for(let e=0;e<i;e++){const n=t*i+e;if(!p||p[n]){const t=f[n];for(let e=0;e<x;e+=2)if(t>=h[e]&&t<=h[e+1]){u[n]=0,g[n]=0;break}}}}return new r.Z({width:i,height:n,pixelType:a,pixels:[u],mask:g})}function d(t,e,i,n){const s=null!=i&&i.length>=2?new Set(i):null,l=1===i?.length?i[0]:null,r=!!e?.length;for(let o=0;o<t.length;o++)if(n[o]){const i=t[o];if(r){let t=!1;for(let n=0;n<e.length;n+=2)if(i>=e[n]&&i<=e[n+1]){t=!0;break}t||(n[o]=0)}n[o]&&(i===l||s?.has(i))&&(n[o]=0)}}function m(t,e){const i=t[0].length;for(let n=0;n<i;n++)if(e[n]){let i=!1;for(let e=0;e<t.length;e++)if(t[e][n]){i=!0;break}i||(e[n]=0)}}function y(t,e){const i=t[0].length;for(let n=0;n<i;n++)if(e[n]){let i=!1;for(let e=0;e<t.length;e++)if(0===t[e][n]){i=!0;break}i&&(e[n]=0)}}function w(t,e){if(!o(t))return null;const{width:i,height:n,pixels:s}=t,l=i*n,a=new Uint8Array(l);t.mask?a.set(t.mask):a.fill(255);const h=s.length,{includedRanges:c,noDataValues:f,outputPixelType:u,matchAll:x,lookup:g}=e;if(g){const t=[];for(let e=0;e<h;e++){const i=p(s[e],a,g.lut,g.offset||0,"u8");t.push(i)}1===t.length?a.set(t[0]):x?m(t,a):y(t,a)}else if(x){const t=[];for(let e=0;e<h;e++){const i=new Uint8Array(l);i.set(a),d(s[e],c,f,i),t.push(i)}1===t.length?a.set(t[0]):m(t,a)}else for(let r=0;r<h;r++)d(s[r],c,f,a);return new r.Z({width:i,height:n,pixelType:u,pixels:s,mask:a})}function k(t,e,i){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const n=t.includes("16")?65536:256,s=t.includes("s")?-n/2:0,l=r.Z.createEmptyBand(t,n);for(let r=0;r<e.length;r++){const t=i[r],n=Math.ceil(e[2*r]-s),o=Math.floor(e[2*r+1]-s);for(let e=n;e<=o;e++)l[e]=t}return{lut:l,offset:s}}function A(t,e,i){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const n=t.includes("16")?65536:256,s=t.includes("s")?-n/2:0,l=new Uint8Array(n);if(e)for(let r=0;r<e.length;r++){const t=Math.ceil(e[2*r]-s),i=Math.floor(e[2*r+1]-s);for(let e=t;e<=i;e++)l[e]=255}if(i)for(let r=0;r<i.length;r++)l[i[r]-s]=0;return{lut:l,offset:s}}function C(t,e,i,n,s,l,r,o){return{xmin:s<=i*t?0:s<i*t+t?s-i*t:t,ymin:l<=n*e?0:l<n*e+e?l-n*e:e,xmax:s+r<=i*t?0:s+r<i*t+t?s+r-i*t:t,ymax:l+o<=n*e?0:l+o<n*e+e?l+o-n*e:e}}function b(t,e){if(!t||0===t.length)return null;const i=t.find((t=>t.pixelBlock));if(!i||(0,l.Wi)(i.pixelBlock))return null;const n=(i.extent.xmax-i.extent.xmin)/i.pixelBlock.width,s=(i.extent.ymax-i.extent.ymin)/i.pixelBlock.height,r=.01*Math.min(n,s),o=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>r?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>r?t.extent.xmin-e.extent.xmin:0)),a=Math.min.apply(null,o.map((t=>t.extent.xmin))),h=Math.min.apply(null,o.map((t=>t.extent.ymin))),c=Math.max.apply(null,o.map((t=>t.extent.xmax))),f=Math.max.apply(null,o.map((t=>t.extent.ymax))),u={x:Math.round((e.xmin-a)/n),y:Math.round((f-e.ymax)/s)},p={width:Math.round((c-a)/n),height:Math.round((f-h)/s)},x={width:Math.round((e.xmax-e.xmin)/n),height:Math.round((e.ymax-e.ymin)/s)};return Math.round(p.width/i.pixelBlock.width)*Math.round(p.height/i.pixelBlock.height)!==o.length||u.x<0||u.y<0||p.width<x.width||p.height<x.height?null:{extent:e,pixelBlock:T(o.map((t=>t.pixelBlock)),p,{clipOffset:u,clipSize:x})}}function M(t,e,i,n,s,l){const{width:r,height:o}=i.block,{x:a,y:h}=i.offset,{width:c,height:f}=i.mosaic,u=C(r,o,n,s,a,h,c,f);let p=0,x=0;if(l){const t=l.hasGCSSShiftTransform?360:l.halfWorldWidth??0,e=r*l.resolutionX,i=l.startX+n*e,s=i+e;i<t&&s>t?x=l.rightPadding:i>=t&&(p=l.leftMargin-l.rightPadding,x=0)}if(u.xmax-=x,"number"!=typeof e)for(let g=u.ymin;g<u.ymax;g++){const i=(s*o+g-h)*c+(n*r-a)+p,l=g*r;for(let n=u.xmin;n<u.xmax;n++)t[i+n]=e[l+n]}else for(let g=u.ymin;g<u.ymax;g++){const i=(s*o+g-h)*c+(n*r-a)+p;for(let n=u.xmin;n<u.xmax;n++)t[i+n]=e}}function T(t,e,i={}){const{clipOffset:n,clipSize:s,alignmentInfo:a,blockWidths:h}=i;if(h)return U(t,e,{blockWidths:h});const c=t.find((t=>o(t)));if((0,l.Wi)(c))return null;const f=s?s.width:e.width,u=s?s.height:e.height,p=c.width,x=c.height,g=e.width/p,d=e.height/x,m={offset:n||{x:0,y:0},mosaic:s||e,block:{width:p,height:x}},y=c.pixelType,w=r.Z.getPixelArrayConstructor(y),k=c.pixels.length,A=[];let C,b,T;for(let l=0;l<k;l++){b=new w(f*u);for(let e=0;e<d;e++)for(let i=0;i<g;i++){const n=t[e*g+i];o(n)&&(C=n.pixels[l],M(b,C,m,i,e,a))}A.push(b)}if(t.some((t=>(0,l.Wi)(t)||(0,l.pC)(t.mask)&&t.mask.length>0))){T=new Uint8Array(f*u);for(let e=0;e<d;e++)for(let i=0;i<g;i++){const n=t[e*g+i],s=(0,l.pC)(n)?n.mask:null;(0,l.pC)(s)?M(T,s,m,i,e,a):M(T,n?1:0,m,i,e,a)}}const B=new r.Z({width:f,height:u,pixels:A,pixelType:y,mask:T});return B.updateStatistics(),B}function U(t,e,i){const n=t.find((t=>(0,l.pC)(t)));if((0,l.Wi)(n))return null;const s=t.some((t=>!(0,l.pC)(t)||!!t.mask)),{width:a,height:h}=e,c=s?new Uint8Array(a*h):null,{blockWidths:f}=i,u=[],p=n.getPlaneCount(),x=r.Z.getPixelArrayConstructor(n.pixelType);if(s)for(let r=0,d=0;r<t.length;d+=f[r],r++){const e=t[r];if(!o(e))continue;const i=(0,l.Wg)(e.mask);for(let t=0;t<h;t++)for(let n=0;n<f[r];n++)c[t*a+n+d]=null==i?255:i[t*e.width+n]}for(let l=0;l<p;l++){const e=new x(a*h);for(let i=0,n=0;i<t.length;n+=f[i],i++){const s=t[i];if(!o(s))continue;const r=s.pixels[l];if(null!=r)for(let t=0;t<h;t++)for(let l=0;l<f[i];l++)e[t*a+l+n]=r[t*s.width+l]}u.push(e)}const g=new r.Z({width:a,height:h,mask:c,pixels:u,pixelType:n.pixelType});return g.updateStatistics(),g}function B(t,e,i){if(!o(t))return null;const{width:n,height:s}=t,l=e.x,r=e.y,a=i.width+l,h=i.height+r;if(l<0||r<0||a>n||h>s)return t;if(0===l&&0===r&&a===n&&h===s)return t;t.mask||(t.mask=new Uint8Array(n*s));const c=t.mask;for(let o=0;o<s;o++){const t=o*n;for(let e=0;e<n;e++)c[t+e]=o<r||o>=h||e<l||e>=a?0:1}return t.updateStatistics(),t}function v(t){if(!o(t))return null;const e=t.clone(),{width:i,height:n,pixels:s}=t,r=s[0],a=e.pixels[0],h=(0,l.Wg)(t.mask);for(let l=2;l<n-1;l++){const t=new Map;for(let n=l-2;n<l+2;n++)for(let e=0;e<4;e++){const s=n*i+e;Z(t,r[s],h?h[s]:1)}a[l*i]=_(t),a[l*i+1]=a[l*i+2]=a[l*i];let e=3;for(;e<i-1;e++){let n=(l-2)*i+e+1;Z(t,r[n],h?h[n]:1),n=(l-1)*i+e+1,Z(t,r[n],h?h[n]:1),n=l*i+e+1,Z(t,r[n],h?h[n]:1),n=(l+1)*i+e+1,Z(t,r[n],h?h[n]:1),n=(l-2)*i+e-3,P(t,r[n],h?h[n]:1),n=(l-1)*i+e-3,P(t,r[n],h?h[n]:1),n=l*i+e-3,P(t,r[n],h?h[n]:1),n=(l+1)*i+e-3,P(t,r[n],h?h[n]:1),a[l*i+e]=_(t)}a[l*i+e+1]=a[l*i+e]}for(let l=0;l<i;l++)a[l]=a[i+l]=a[2*i+l],a[(n-1)*i+l]=a[(n-2)*i+l];return e.updateStatistics(),e}function _(t){if(0===t.size)return 0;let e=0,i=-1,n=0;const s=t.keys();let l=s.next();for(;!l.done;)n=t.get(l.value),n>e&&(i=l.value,e=n),l=s.next();return i}function P(t,e,i){if(0===i)return;const n=t.get(e);1===n?t.delete(e):t.set(e,n-1)}function Z(t,e,i){0!==i&&t.set(e,t.has(e)?t.get(e)+1:1)}function S(t,e,i){let{x:n,y:s}=e;const{width:a,height:h}=i;if(0===n&&0===s&&h===t.height&&a===t.width)return t;const{width:c,height:f}=t,u=Math.max(0,s),p=Math.max(0,n),x=Math.min(n+a,c),g=Math.min(s+h,f);if(x<0||g<0||!o(t))return null;n=Math.max(0,-n),s=Math.max(0,-s);const{pixels:d}=t,m=a*h,y=d.length,w=[];for(let l=0;l<y;l++){const e=d[l],i=r.Z.createEmptyBand(t.pixelType,m);for(let t=u;t<g;t++){const l=t*c;let r=(t+s-u)*a+n;for(let t=p;t<x;t++)i[r++]=e[l+t]}w.push(i)}const k=new Uint8Array(m),A=(0,l.Wg)(t.mask);for(let l=u;l<g;l++){const t=l*c;let e=(l+s-u)*a+n;for(let i=p;i<x;i++)k[e++]=A?A[t+i]:1}const C=new r.Z({width:i.width,height:i.height,pixelType:t.pixelType,pixels:w,mask:k});return C.updateStatistics(),C}function F(t,e=!0){if(!o(t))return null;const{pixels:i,width:n,height:s,mask:a,pixelType:h}=t,c=[],f=Math.round(n/2),u=Math.round(s/2),p=s-1,x=n-1;for(let l=0;l<i.length;l++){const t=i[l],o=r.Z.createEmptyBand(h,f*u);let a=0;for(let i=0;i<s;i+=2)for(let s=0;s<n;s+=2){const l=t[i*n+s];if(e){const e=s===x?l:t[i*n+s+1],r=i===p?l:t[i*n+s+n],h=s===x?r:i===p?e:t[i*n+s+n+1];o[a++]=(l+e+r+h)/4}else o[a++]=l}c.push(o)}let g=null;if((0,l.pC)(a)){g=new Uint8Array(f*u);let t=0;for(let i=0;i<s;i+=2)for(let s=0;s<n;s+=2){const l=a[i*n+s];if(e){const e=s===x?l:a[i*n+s+1],r=i===p?l:a[i*n+s+n],o=s===x?r:i===p?e:a[i*n+s+n+1];g[t++]=l*e*r*o?1:0}else g[t++]=l}}return new r.Z({width:f,height:u,pixelType:h,pixels:c,mask:g})}function R(t,e,i){if(!o(t))return null;const{width:n,height:s}=e;let{width:l,height:r}=t;const a=new Map,h={x:0,y:0},c=null==i?1:1+i;let f=t;for(let o=0;o<c;o++){const t=Math.ceil(l/n),i=Math.ceil(r/s);for(let l=0;l<i;l++){h.y=l*s;for(let i=0;i<t;i++){h.x=i*n;const t=S(f,h,e);a.set(`${o}/${l}/${i}`,t)}}o<c-1&&(f=F(f)),l=Math.round(l/2),r=Math.round(r/2)}return a}function W(t,e,i,n,s=.5){const{width:l,height:r}=t,{width:o,height:a}=e,h=n.cols,c=n.rows,f=Math.ceil(o/h-.1/h),u=Math.ceil(a/c-.1/c);let p,x,g,d,m,y,w;const k=f*h,A=k*u*c,C=new Float32Array(A),b=new Float32Array(A),M=new Uint32Array(A),T=new Uint32Array(A);let U,B,v=0;for(let _=0;_<u;_++)for(let t=0;t<f;t++){p=12*(_*f+t),x=i[p],g=i[p+1],d=i[p+2],m=i[p+3],y=i[p+4],w=i[p+5];for(let e=0;e<c;e++){v=(_*c+e)*k+t*h,B=(e+.5)/c;for(let t=0;t<e;t++)U=(t+.5)/h,C[v+t]=(x*U+g*B+d)*l-s,b[v+t]=(m*U+y*B+w)*r-s,M[v+t]=Math.round(C[v+t]),T[v+t]=Math.round(b[v+t])}p+=6,x=i[p],g=i[p+1],d=i[p+2],m=i[p+3],y=i[p+4],w=i[p+5];for(let e=0;e<c;e++){v=(_*c+e)*k+t*h,B=(e+.5)/c;for(let t=e;t<h;t++)U=(t+.5)/h,C[v+t]=(x*U+g*B+d)*l-s,b[v+t]=(m*U+y*B+w)*r-s,M[v+t]=Math.round(C[v+t]),T[v+t]=Math.round(b[v+t])}}return{offsets_x:C,offsets_y:b,offsets_xi:M,offsets_yi:T,gridWidth:k}}function G(t,e){const{coefficients:i,spacing:n}=e,{offsets_x:s,offsets_y:l,gridWidth:r}=W(t,t,i,{rows:n[0],cols:n[1]},.5),{width:o,height:a}=t,h=new Float32Array(o*a),c=180/Math.PI;for(let f=0;f<a;f++)for(let t=0;t<o;t++){const e=f*r+t,i=0===f?e:e-r,n=f===a-1?e:e+r,u=s[i]-s[n],p=l[n]-l[i];if(isNaN(u)||isNaN(p))h[f*o+t]=90;else{let e=Math.atan2(p,u)*c;e=(360+e)%360,h[f*o+t]=e}}return h}function I(t,e,i,n,s="nearest"){if(!o(t))return null;"majority"===s&&(t=v(t));const{pixels:a,mask:h,pixelType:c}=t,f=t.width,u=t.height,p=r.Z.getPixelArrayConstructor(c),x=a.length,{width:g,height:d}=e;let m=!1;for(let l=0;l<i.length;l+=3)-1===i[l]&&-1===i[l+1]&&-1===i[l+2]&&(m=!0);const{offsets_x:y,offsets_y:w,offsets_xi:k,offsets_yi:A,gridWidth:C}=W({width:f,height:u},e,i,n,"majority"===s?0:.5);let b;const M=(t,e,i)=>{const n=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let s=0;s<d;s++){b=s*C;for(let l=0;l<g;l++){if(y[b]<0||w[b]<0)t[s*g+l]=0;else if(i)t[s*g+l]=e[k[b]+A[b]*f];else{const i=Math.floor(y[b]),r=Math.floor(w[b]),o=Math.ceil(y[b]),a=Math.ceil(w[b]),c=y[b]-i,u=w[b]-r;if(!h||h[i+r*f]&&h[i+r*f]&&h[i+a*f]&&h[o+a*f]){const h=(1-c)*e[i+r*f]+c*e[o+r*f],p=(1-c)*e[i+a*f]+c*e[o+a*f];t[s*g+l]=(1-u)*h+u*p+n}else t[s*g+l]=e[k[b]+A[b]*f]}b++}}},T=[];let U;for(let l=0;l<x;l++)U=new p(g*d),M(U,a[l],"nearest"===s||"majority"===s),T.push(U);const B=new r.Z({width:g,height:d,pixelType:c,pixels:T});if((0,l.pC)(h))B.mask=new Uint8Array(g*d),M(B.mask,h,!0);else if(m){B.mask=new Uint8Array(g*d);for(let t=0;t<g*d;t++)B.mask[t]=y[t]<0||w[t]<0?0:1}return B.updateStatistics(),B}!function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"}(n||(n={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(s||(s={}))}}]);
//# sourceMappingURL=1329.913dd1e7.js.map