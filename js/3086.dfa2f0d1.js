"use strict";(self["webpackChunkmy_project"]=self["webpackChunkmy_project"]||[]).push([[3086],{78951:function(t,e,i){i.d(e,{f:function(){return u}});var r=i(7753),s=i(13802),n=i(61681),c=i(86098),h=i(6174),o=i(36172),a=i(91907);const _=s.Z.getLogger("esri.views.webgl.BufferObject");function l(t){return(0,r.zG)(t)}class u{constructor(t,e,i,r){this._context=t,this.bufferType=e,this.usage=i,this._glName=null,this._size=-1,this._indexType=void 0,t.instanceCounter.increment(a._g.BufferObject,this),this._glName=this._context.gl.createBuffer(),(0,h.zu)(this._context.gl),r&&this.setData(r)}static createIndex(t,e,i){return new u(t,a.w0.ELEMENT_ARRAY_BUFFER,e,i)}static createVertex(t,e,i){return new u(t,a.w0.ARRAY_BUFFER,e,i)}static createUniform(t,e,i){if(t.type!==o.zO.WEBGL2)throw new Error("Uniform buffers are supported in WebGL2 only!");return new u(t,a.w0.UNIFORM_BUFFER,e,i)}static createPixelPack(t,e=a.l1.STREAM_READ,i){if(t.type!==o.zO.WEBGL2)throw new Error("Pixel pack buffers are supported in WebGL2 only!");const r=new u(t,a.w0.PIXEL_PACK_BUFFER,e);return i&&r.setSize(i),r}static createPixelUnpack(t,e=a.l1.STREAM_DRAW,i){if(t.type!==o.zO.WEBGL2)throw new Error("Pixel unpack buffers are supported in WebGL2 only!");return new u(t,a.w0.PIXEL_UNPACK_BUFFER,e,i)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get byteSize(){return this.bufferType===a.w0.ELEMENT_ARRAY_BUFFER?this._indexType===a.g.UNSIGNED_INT?4*this._size:2*this._size:this._size}get _isVAOAware(){return this.bufferType===a.w0.ELEMENT_ARRAY_BUFFER||this.bufferType===a.w0.ARRAY_BUFFER}dispose(){this._context?.gl?(this._glName&&(this._context.gl.deleteBuffer(this._glName),this._glName=null),this._context.instanceCounter.decrement(a._g.BufferObject,this),this._context=(0,n.wN)(this._context)):this._glName&&_.warn("Leaked WebGL buffer object")}setSize(t,e=null){if(t<=0&&_.error("Buffer size needs to be positive!"),this.bufferType===a.w0.ELEMENT_ARRAY_BUFFER&&(0,n.pC)(e))switch(this._indexType=e,e){case a.g.UNSIGNED_SHORT:t*=2;break;case a.g.UNSIGNED_INT:t*=4}this._setBufferData(t)}setData(t){if(!t)return;let e=t.byteLength;this.bufferType===a.w0.ELEMENT_ARRAY_BUFFER&&((0,c.Uc)(t)&&(e/=2,this._indexType=a.g.UNSIGNED_SHORT),(0,c.ZY)(t)&&(e/=4,this._indexType=a.g.UNSIGNED_INT)),this._setBufferData(e,t)}_setBufferData(t,e=null){this._size=t;const i=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const r=this._context.gl;(0,n.pC)(e)?r.bufferData(this.bufferType,e,this.usage):r.bufferData(this.bufferType,t,this.usage),(0,h.zu)(r),this._isVAOAware&&this._context.bindVAO(i)}setSubData(t,e,i,r){if(!t)return;(e<0||e>=this._size)&&_.error("offset is out of range!"),i>=r&&_.error("end must be bigger than start!"),e+(r-i)>this._size&&_.error("An attempt to write beyond the end of the buffer!");const s=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const n=this._context.gl;if(this._context.type===o.zO.WEBGL2)n.bufferSubData(this.bufferType,e*t.BYTES_PER_ELEMENT,t,i,r-i);else{const s=0===i&&r===t.length?t:t.subarray(i,r);n.bufferSubData(this.bufferType,e*t.BYTES_PER_ELEMENT,s)}(0,h.zu)(n),this._isVAOAware&&this._context.bindVAO(s)}getSubData(t,e=0,i,r){if(this._context.type!==o.zO.WEBGL2)return void _.error("Get buffer subdata is supported in WebGL2 only!");if(i<0||r<0)return void _.error("Problem getting subdata: offset and length were less than zero!");const s=l(t)?t.BYTES_PER_ELEMENT:1;if(s*((i??0)+(r??0))>t.byteLength)return void _.error("Problem getting subdata: offset and length exceeded destination size!");e+s*(r??0)>this.byteSize&&_.warn("Potential problem getting subdata: requested data exceeds buffer size!");const n=this._context.gl;this._context.bindBuffer(this,a.w0.COPY_READ_BUFFER),n.getBufferSubData(a.w0.COPY_READ_BUFFER,e,t,i,r),this._context.unbindBuffer(a.w0.COPY_READ_BUFFER)}async getSubDataAsync(t,e=0,i,r){this._context.type===o.zO.WEBGL2?(await this._context.clientWaitAsync(),this.getSubData(t,e,i,r)):_.error("Get buffer subdata is supported in WebGL2 only!")}}},18567:function(t,e,i){i.d(e,{X:function(){return u}});var r=i(13802),s=i(61681),n=i(78951),c=i(6174),h=i(36172),o=i(91907),a=i(37165),_=i(43487),l=i(62486);class u{constructor(t,e,i=null,r=null){if(this._context=t,this._glName=null,this._depthAttachment=null,this._stencilAttachment=null,this._colorAttachments=new Map,this._depthStencilTexture=null,this._initialized=!1,this._desc={...e},t.instanceCounter.increment(o._g.FramebufferObject,this),(0,s.pC)(i)){Array.isArray(i)||(i=[i]);for(let t=0;t<i.length;++t){const e=i[t],r=o.VY.COLOR_ATTACHMENT0+t;let s;d(e)?(f(e)?(s=e.descriptor,this._colorAttachments.set(r,e)):(s=e,this._colorAttachments.set(r,new _.x(this._context,s))),R(s,this._desc)):(E(e)?(s=e.descriptor,this._colorAttachments.set(r,e)):(s=e,this._colorAttachments.set(r,new a.r(this._context,s))),A(s,this._desc)),this._validateColorAttachmentPoint(r)}}if((0,s.pC)(r)){let t,e;if(d(r))this._context.capabilities.depthTexture||console.error("Setting the depth/stencil texture as an attachment requires WEBGL_depth_texture or WebGL2"),f(r)?(e=r.descriptor,this._depthStencilTexture=r):(e=r,this._depthStencilTexture=new _.x(this._context,e)),R(e,this._desc);else{E(r)?(e=r.descriptor,t=r):(e=r,t=new a.r(this._context,e));const i=this._desc.depthStencilTarget??o.OU.DEPTH_STENCIL_RENDER_BUFFER;i===o.OU.STENCIL_RENDER_BUFFER?this._stencilAttachment=t:i===o.OU.DEPTH_RENDER_BUFFER||i===o.OU.DEPTH_STENCIL_RENDER_BUFFER?this._depthAttachment=t:console.error('If a Renderbuffer is provided, "depthStencilTarget" must be one of STENCIL_RENDER_BUFFER, DEPTH_RENDER_BUFFER or DEPTH_STENCIL_RENDER_BUFFER'),this._desc.depthStencilTarget=i,A(e,this._desc)}}}dispose(){if(!this._desc)return;const t=this._context.getBoundFramebufferObject();this._disposeColorAttachments(),this._disposeDepthStencilAttachments(),this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null),this._context.bindFramebuffer(t),this._context.instanceCounter.decrement(o._g.FramebufferObject,this),this._desc=null}get glName(){return this._glName}get descriptor(){return this._desc}get colorTexture(){const t=this._colorAttachments.get(o.VY.COLOR_ATTACHMENT0);return t&&f(t)?t:null}get colorAttachment(){return this._colorAttachments.get(o.VY.COLOR_ATTACHMENT0)}get depthStencilAttachment(){return this._depthStencilTexture||this._depthAttachment||this._stencilAttachment}get depthStencilTexture(){return this._depthStencilTexture}get width(){return this._desc.width??0}get height(){return this._desc.height??0}get gpuMemoryUsage(){return[...this._colorAttachments].reduce(((t,[e,i])=>t+(0,l.un)(i)),0)+(0,l.un)(this.depthStencilAttachment)}getColorTexture(t){const e=this._colorAttachments.get(t);return e&&f(e)?e:null}attachColorTexture(t,e=o.VY.COLOR_ATTACHMENT0){t&&(this._validateColorAttachmentPoint(e),R(t.descriptor,this._desc),this._disposeColorAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,e)),this._colorAttachments.set(e,t))}detachColorTexture(t=o.VY.COLOR_ATTACHMENT0){const e=this._colorAttachments.get(t);if(f(e)){const i=e;return this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t)),this._colorAttachments.delete(t),i}}setColorTextureTarget(t,e=o.VY.COLOR_ATTACHMENT0){const i=this._colorAttachments.get(e);f(i)&&this._framebufferTexture2D(i.glName,e,t)}attachDepthStencilTexture(t){if((0,s.Wi)(t))return;const e=t.descriptor;e.pixelFormat!==o.VI.DEPTH_STENCIL&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),e.dataType!==o.Br.UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!"),R(e,this._desc),this._desc.depthStencilTarget&&this._desc.depthStencilTarget!==o.OU.DEPTH_STENCIL_TEXTURE&&(this._desc.depthStencilTarget=o.OU.DEPTH_STENCIL_TEXTURE),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,o.Lu)),this._depthStencilTexture=t}detachDepthStencilTexture(){const t=this._depthStencilTexture;return t&&this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,o.Lu)),this._depthStencilTexture=null,t}attachDepthStencilBuffer(t){if((0,s.Wi)(t))return;const e=t.descriptor;if(e.internalFormat!==o.Tg.DEPTH_STENCIL&&e.internalFormat!==o.Tg.DEPTH_COMPONENT16&&console.error("Depth/Stencil buffer must have correct internalFormat"),A(e,this._desc),this._disposeDepthStencilAttachments(),this._desc.depthStencilTarget=e.internalFormat===o.Tg.DEPTH_STENCIL?o.OU.DEPTH_STENCIL_RENDER_BUFFER:o.OU.DEPTH_RENDER_BUFFER,this._initialized){this._context.bindFramebuffer(this);const e=this._context.gl,i=this._desc.depthStencilTarget===o.OU.DEPTH_RENDER_BUFFER?e.DEPTH_ATTACHMENT:e.DEPTH_STENCIL_ATTACHMENT;e.framebufferRenderbuffer(o.qi.FRAMEBUFFER,i,e.RENDERBUFFER,t.glName)}this._depthAttachment=t}detachDepthStencilBuffer(){const t=this._context.gl,e=this._depthAttachment;if(e&&this._initialized){this._context.bindFramebuffer(this);const e=this._desc.depthStencilTarget===o.OU.DEPTH_RENDER_BUFFER?t.DEPTH_ATTACHMENT:t.DEPTH_STENCIL_ATTACHMENT;t.framebufferRenderbuffer(o.qi.FRAMEBUFFER,e,t.RENDERBUFFER,null)}return this._depthAttachment=null,e}detachAll(){this._colorAttachments.forEach(((t,e)=>this._detachColorAttachment(e))),this.detachDepthStencilBuffer(),this.detachDepthStencilTexture()}copyToTexture(t,e,i,r,s,n,c){(t<0||e<0||s<0||n<0)&&console.error("Offsets cannot be negative!"),(i<=0||r<=0)&&console.error("Copy width and height must be greater than zero!");const h=this._desc,a=c.descriptor;c.descriptor.target!==o.No.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),(null==h?.width||null==h?.height||null==a?.width||null==a?.height||t+i>h.width||e+r>h.height||s+i>a.width||n+r>a.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const l=this._context,u=l.bindTexture(c,_.x.TEXTURE_UNIT_FOR_UPDATES);l.setActiveTexture(_.x.TEXTURE_UNIT_FOR_UPDATES),l.bindFramebuffer(this),l.gl.copyTexSubImage2D(o.No.TEXTURE_2D,0,s,n,t,e,i,r),l.bindTexture(u,_.x.TEXTURE_UNIT_FOR_UPDATES)}readPixels(t,e,i,r,s,n,c){(i<=0||r<=0)&&console.error("Copy width and height must be greater than zero!"),c||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(t,e,i,r,s,n,c)}async readPixelsAsync(t,e,i,r,s,a,_){if(this._context.type!==h.zO.WEBGL2)return(0,c.hZ)()&&console.warn("Attempting to read pixels using pixel buffer object without WebGL2"),void this.readPixels(t,e,i,r,s,a,_);const l=this._context.gl,u=n.f.createPixelPack(this._context,o.l1.STREAM_READ,_.byteLength);this._context.bindBuffer(u),this._context.bindFramebuffer(this),l.readPixels(t,e,i,r,s,a,0),this._context.unbindBuffer(o.w0.PIXEL_PACK_BUFFER),await u.getSubDataAsync(_),u.dispose()}resize(t,e){const i=this._desc;if(i.width!==t||i.height!==e){if(!this._initialized)return i.width=t,i.height=e,this._colorAttachments.forEach((i=>{i&&i.resize(t,e)})),void(this._depthStencilTexture&&this._depthStencilTexture.resize(t,e));i.width=t,i.height=e,this._colorAttachments.forEach((i=>{i&&i.resize(t,e)})),null!=this._depthStencilTexture?this._depthStencilTexture.resize(t,e):(this._depthAttachment||this._stencilAttachment)&&(this._depthAttachment&&this._depthAttachment.resize(t,e),this._stencilAttachment&&this._stencilAttachment.resize(t,e)),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1}}initializeAndBind(t=o.qi.FRAMEBUFFER){const e=this._context.gl;if(this._initialized)return void e.bindFramebuffer(t,this.glName);this._glName&&e.deleteFramebuffer(this._glName);const i=this._context,r=e.createFramebuffer(),s=this._desc,n=s.colorTarget??o.Lm.RENDER_BUFFER,h=s.width??1,l=s.height??1;if(e.bindFramebuffer(t,r),0===this._colorAttachments.size)if(n===o.Lm.TEXTURE||n===o.Lm.CUBEMAP)this._colorAttachments.set(o.VY.COLOR_ATTACHMENT0,T(i,s,this.descriptor.colorTarget===o.Lm.CUBEMAP?o.No.TEXTURE_CUBE_MAP:o.No.TEXTURE_2D));else{const t=new a.r(i,{internalFormat:o.lP.RGBA4,width:h,height:l});this._colorAttachments.set(o.VY.COLOR_ATTACHMENT0,t)}this._colorAttachments.forEach(((i,r)=>{i&&(f(i)?this._framebufferTexture2D(i.glName,r,b(i),t):e.framebufferRenderbuffer(t,r,e.RENDERBUFFER,i.glName))}));const u=s.depthStencilTarget??o.OU.NONE;switch(u){case o.OU.DEPTH_RENDER_BUFFER:case o.OU.DEPTH_STENCIL_RENDER_BUFFER:{this._depthAttachment||(this._depthAttachment=new a.r(i,{internalFormat:s.depthStencilTarget===o.OU.DEPTH_RENDER_BUFFER?o.Tg.DEPTH_COMPONENT16:o.Tg.DEPTH_STENCIL,width:h,height:l}));const r=u===o.OU.DEPTH_RENDER_BUFFER?e.DEPTH_ATTACHMENT:e.DEPTH_STENCIL_ATTACHMENT;e.framebufferRenderbuffer(t,r,e.RENDERBUFFER,this._depthAttachment.glName);break}case o.OU.STENCIL_RENDER_BUFFER:this._stencilAttachment||(this._stencilAttachment=new a.r(i,{internalFormat:o.Tg.STENCIL_INDEX8,width:h,height:l})),e.framebufferRenderbuffer(t,e.STENCIL_ATTACHMENT,e.RENDERBUFFER,this._stencilAttachment.glName);break;case o.OU.DEPTH_STENCIL_TEXTURE:if(!this._depthStencilTexture){i.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture as an attachment!");const t={target:o.No.TEXTURE_2D,pixelFormat:o.VI.DEPTH_STENCIL,dataType:o.Br.UNSIGNED_INT_24_8,samplingMode:o.cw.NEAREST,wrapMode:o.e8.CLAMP_TO_EDGE,width:h,height:l};this._depthStencilTexture=new _.x(i,t)}this._framebufferTexture2D(this._depthStencilTexture.glName,e.DEPTH_STENCIL_ATTACHMENT,b(this._depthStencilTexture),t)}(0,c.hZ)()&&e.checkFramebufferStatus(t)!==e.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!"),this._glName=r,this._initialized=!0}_framebufferTexture2D(t,e=o.VY.COLOR_ATTACHMENT0,i=o.No.TEXTURE_2D,r=o.qi.FRAMEBUFFER,s=0){this._context.gl.framebufferTexture2D(r,e,i,t,s)}_detachColorAttachment(t){(0,c.hZ)()&&console.warn("Detaching an FBO attachment can be a slow due to invalidating framebuffer completeness!");const e=this._context.gl,i=this._colorAttachments.get(t);return f(i)?this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t)):this._initialized&&(this._context.bindFramebuffer(this),e.framebufferRenderbuffer(o.qi.FRAMEBUFFER,t,e.RENDERBUFFER,null)),this._colorAttachments.delete(t),i}_disposeColorAttachments(){this._colorAttachments.forEach(((t,e)=>{this._detachColorAttachment(e),t.dispose()})),this._colorAttachments.clear()}_disposeDepthStencilAttachments(){const t=this._context.gl;if(this._depthAttachment){if(this._initialized){this._context.bindFramebuffer(this);const e=this._desc.depthStencilTarget===o.OU.DEPTH_RENDER_BUFFER?t.DEPTH_ATTACHMENT:t.DEPTH_STENCIL_ATTACHMENT;t.framebufferRenderbuffer(o.qi.FRAMEBUFFER,e,t.RENDERBUFFER,null)}this._depthAttachment.dispose(),this._depthAttachment=null}this._stencilAttachment&&(this._initialized&&(this._context.bindFramebuffer(this),t.framebufferRenderbuffer(o.qi.FRAMEBUFFER,t.STENCIL_ATTACHMENT,t.RENDERBUFFER,null)),this._stencilAttachment.dispose(),this._stencilAttachment=null),this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture.dispose(),this._depthStencilTexture=null)}_validateColorAttachmentPoint(t){if(-1===u._MAX_COLOR_ATTACHMENTS){const t=this._context.capabilities.drawBuffers;if(t){const e=this._context.gl;u._MAX_COLOR_ATTACHMENTS=e.getParameter(t.MAX_COLOR_ATTACHMENTS)}else u._MAX_COLOR_ATTACHMENTS=1}const e=t-o.VY.COLOR_ATTACHMENT0;e+1>u._MAX_COLOR_ATTACHMENTS&&r.Z.getLogger("esri.views.webgl.FrameBufferObject").error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${e+1}. Implementation supports up to ${u._MAX_COLOR_ATTACHMENTS} color attachments`)}}function f(t){return null!=t&&"type"in t&&"texture"===t.type}function E(t){return null!=t&&"type"in t&&"renderbuffer"===t.type}function d(t){return f(t)||null!=t&&"pixelFormat"in t}function T(t,e,i){return new _.x(t,{target:i,pixelFormat:o.VI.RGBA,dataType:o.Br.UNSIGNED_BYTE,samplingMode:o.cw.NEAREST,wrapMode:o.e8.CLAMP_TO_EDGE,width:e.width,height:e.height})}function R(t,e){t.target!==o.No.TEXTURE_2D&&t.target!==o.No.TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),void 0!==e.width&&e.width>=0&&void 0!==e.height&&e.height>=0?e.width===t.width&&e.height===t.height||console.error("Color attachment texture must match the framebuffer's!"):(e.width=t.width,e.height=t.height)}function A(t,e){void 0!==e.width&&e.width>=0&&void 0!==e.height&&e.height>=0?e.width===t.width&&e.height===t.height||console.error("Renderbuffer dimensions must match the framebuffer's!"):(e.width=t.width,e.height=t.height)}function b(t){return t.descriptor.target===o.No.TEXTURE_CUBE_MAP?o.No.TEXTURE_CUBE_MAP_POSITIVE_X:o.No.TEXTURE_2D}u._MAX_COLOR_ATTACHMENTS=-1},37165:function(t,e,i){i.d(e,{r:function(){return c}});var r=i(61681),s=i(36172),n=i(91907);class c{constructor(t,e){this._context=t,this._desc=e,this.type="renderbuffer",this._context.instanceCounter.increment(n._g.Renderbuffer,this);const i=this._context.gl;this.glName=i.createRenderbuffer(),this._context.bindRenderbuffer(this);const{width:r,height:c,internalFormat:h,multisampled:o}=e;if(o){if(this._context.type!==s.zO.WEBGL2)throw new Error("Multisampled renderbuffers are not supported in WebGL1!");i.renderbufferStorageMultisample(i.RENDERBUFFER,this.samples,h,r,c)}else i.renderbufferStorage(i.RENDERBUFFER,h,r,c)}get descriptor(){return this._desc}get samples(){const t=this._desc.samples,e=this._context.parameters.maxSamples;return t?Math.min(t,e):e}resize(t,e){const i=this._desc;if(i.width===t&&i.height===e)return;i.width=t,i.height=e;const r=this._context.gl;this._context.bindRenderbuffer(this),i.multisampled?r.renderbufferStorageMultisample(r.RENDERBUFFER,this.samples,i.internalFormat,i.width,i.height):r.renderbufferStorage(r.RENDERBUFFER,i.internalFormat,i.width,i.height)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(n._g.Renderbuffer,this),this._context=(0,r.wN)(this._context))}}},62486:function(t,e,i){i.d(e,{HH:function(){return n},RG:function(){return _},UF:function(){return a},XP:function(){return o},_V:function(){return c},un:function(){return l}});i(39994);var r=i(61681),s=i(91907);function n(t){const e=t.gl;switch(e.getError()){case e.NO_ERROR:return null;case e.INVALID_ENUM:return"An unacceptable value has been specified for an enumerated argument";case e.INVALID_VALUE:return"A numeric argument is out of range";case e.INVALID_OPERATION:return"The specified command is not allowed for the current state";case e.INVALID_FRAMEBUFFER_OPERATION:return"The currently bound framebuffer is not framebuffer complete";case e.OUT_OF_MEMORY:return"Not enough memory is left to execute the command";case e.CONTEXT_LOST_WEBGL:return"WebGL context is lost"}return"Unknown error"}function c(t,e){return t.vertexBuffers[e].size/h(t.layout[e])}function h(t){return t[0].stride}function o(t,e,i,r,s=0){const n=t.gl,c=t.capabilities.instancing;t.bindBuffer(i);for(const h of r){const t=e.get(h.name);void 0===t&&console.error(`There is no location for vertex attribute '${h.name}' defined.`);const i=s*h.stride;if(h.count<=4)n.vertexAttribPointer(t,h.count,h.type,h.normalized,h.stride,h.offset+i),n.enableVertexAttribArray(t),h.divisor>0&&c&&c.vertexAttribDivisor(t,h.divisor);else if(9===h.count)for(let e=0;e<3;e++)n.vertexAttribPointer(t+e,3,h.type,h.normalized,h.stride,h.offset+12*e+i),n.enableVertexAttribArray(t+e),h.divisor>0&&c&&c.vertexAttribDivisor(t+e,h.divisor);else if(16===h.count)for(let e=0;e<4;e++)n.vertexAttribPointer(t+e,4,h.type,h.normalized,h.stride,h.offset+16*e+i),n.enableVertexAttribArray(t+e),h.divisor>0&&c&&c.vertexAttribDivisor(t+e,h.divisor);else console.error("Unsupported vertex attribute element count: "+h.count)}}function a(t,e,i,r){const n=t.gl,c=t.capabilities.instancing;t.bindBuffer(i);for(const s of r){const t=e.get(s.name);if(s.count<=4)n.disableVertexAttribArray(t),s.divisor&&s.divisor>0&&c&&c.vertexAttribDivisor(t,0);else if(9===s.count)for(let e=0;e<3;e++)n.disableVertexAttribArray(t+e),s.divisor&&s.divisor>0&&c&&c.vertexAttribDivisor(t+e,0);else if(16===s.count)for(let e=0;e<4;e++)n.disableVertexAttribArray(t+e),s.divisor&&s.divisor>0&&c&&c.vertexAttribDivisor(t+e,0);else console.error("Unsupported vertex attribute element count: "+s.count)}t.unbindBuffer(s.w0.ARRAY_BUFFER)}function _(t){switch(t){case s.VI.ALPHA:case s.VI.LUMINANCE:case s.VI.RED:case s.VI.RED_INTEGER:case s.lP.R8:case s.lP.R8I:case s.lP.R8UI:case s.lP.R8_SNORM:case s.Tg.STENCIL_INDEX8:return 1;case s.VI.LUMINANCE_ALPHA:case s.VI.RG:case s.VI.RG_INTEGER:case s.lP.RGBA4:case s.lP.R16F:case s.lP.R16I:case s.lP.R16UI:case s.lP.RG8:case s.lP.RG8I:case s.lP.RG8UI:case s.lP.RG8_SNORM:case s.lP.RGB565:case s.lP.RGB5_A1:case s.Tg.DEPTH_COMPONENT16:return 2;case s.VI.DEPTH_COMPONENT:case s.VI.RGB:case s.VI.RGB_INTEGER:case s.lP.RGB8:case s.lP.RGB8I:case s.lP.RGB8UI:case s.lP.RGB8_SNORM:case s.lP.SRGB8:case s.Tg.DEPTH_COMPONENT24:return 3;case s.VI.DEPTH_STENCIL:case s.VI.RGBA:case s.VI.RGBA_INTEGER:case s.lP.RGBA8:case s.lP.R32F:case s.lP.R11F_G11F_B10F:case s.lP.RG16F:case s.lP.R32I:case s.lP.R32UI:case s.lP.RG16I:case s.lP.RG16UI:case s.lP.RGBA8I:case s.lP.RGBA8UI:case s.lP.RGBA8_SNORM:case s.lP.SRGB8_ALPHA8:case s.lP.RGB9_E5:case s.lP.RGB10_A2UI:case s.lP.RGB10_A2:case s.Tg.DEPTH_STENCIL:case s.Tg.DEPTH_COMPONENT32F:case s.Tg.DEPTH24_STENCIL8:return 4;case s.Tg.DEPTH32F_STENCIL8:return 5;case s.lP.RGB16F:case s.lP.RGB16I:case s.lP.RGB16UI:return 6;case s.lP.RG32F:case s.lP.RG32I:case s.lP.RG32UI:case s.lP.RGBA16F:case s.lP.RGBA16I:case s.lP.RGBA16UI:return 8;case s.lP.RGB32F:case s.lP.RGB32I:case s.lP.RGB32UI:return 12;case s.lP.RGBA32F:case s.lP.RGBA32I:case s.lP.RGBA32UI:return 16;case s.q_.COMPRESSED_RGB_S3TC_DXT1_EXT:case s.q_.COMPRESSED_RGBA_S3TC_DXT1_EXT:return.5;case s.q_.COMPRESSED_RGBA_S3TC_DXT3_EXT:case s.q_.COMPRESSED_RGBA_S3TC_DXT5_EXT:return 1;case s.q_.COMPRESSED_R11_EAC:case s.q_.COMPRESSED_SIGNED_R11_EAC:case s.q_.COMPRESSED_RGB8_ETC2:case s.q_.COMPRESSED_SRGB8_ETC2:case s.q_.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:case s.q_.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:return.5;case s.q_.COMPRESSED_RG11_EAC:case s.q_.COMPRESSED_SIGNED_RG11_EAC:case s.q_.COMPRESSED_RGBA8_ETC2_EAC:case s.q_.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:return 1}return 0}function l(t){if((0,r.Wi)(t))return 0;if("descriptor"in t)return t.glName?l(t.descriptor):0;const e=t.internalFormat||"pixelFormat"in t&&t.pixelFormat;if(!e)return 0;const i="hasMipmap"in t&&t.hasMipmap?1.3:1,s=t.width*t.height;return _(e)*s*i}},29620:function(t,e,i){i.d(e,{U:function(){return o}});var r=i(13802),s=i(61681),n=i(91907),c=i(62486);const h=r.Z.getLogger("esri.views.webgl.VertexArrayObject");class o{constructor(t,e,i,r,s=null){this._context=t,this._locations=e,this._layout=i,this._buffers=r,this._indexBuffer=s,this._glName=null,this._initialized=!1,t.instanceCounter.increment(n._g.VertexArrayObject,this)}get glName(){return this._glName}get context(){return this._context}get vertexBuffers(){return this._buffers}get indexBuffer(){return this._indexBuffer}get size(){return Object.keys(this._buffers).reduce(((t,e)=>t+this._buffers[e].size),(0,s.pC)(this._indexBuffer)?this._indexBuffer.size:0)}get layout(){return this._layout}get locations(){return this._locations}dispose(t=!0){if(this._context){if(this._glName){const t=this._context?.capabilities?.vao;t?(t.deleteVertexArray(this._glName),this._glName=null):h.warn("Leaked WebGL VAO")}if(this._context.getBoundVAO()===this&&this._context.bindVAO(null),t){for(const t in this._buffers)this._buffers[t]?.dispose(),delete this._buffers[t];this._indexBuffer=(0,s.M2)(this._indexBuffer)}this._context.instanceCounter.decrement(n._g.VertexArrayObject,this),this._context=(0,s.wN)(this._context)}else(this._glName||t&&Object.getOwnPropertyNames(this._buffers).length>0)&&h.warn("Leaked WebGL VAO")}initialize(){if(this._initialized)return;const t=this._context.capabilities.vao;if(t){const e=t.createVertexArray();t.bindVertexArray(e),this._bindLayout(),t.bindVertexArray(null),this._glName=e}this._initialized=!0}bind(){this.initialize();const t=this._context.capabilities.vao;t?t.bindVertexArray(this.glName):(this._context.bindVAO(null),this._bindLayout())}_bindLayout(){const{_buffers:t,_layout:e,_indexBuffer:i}=this;t||h.error("Vertex buffer dictionary is empty!");const r=this._context.gl;for(const s in t){const i=t[s];i||h.error("Vertex buffer is uninitialized!");const r=e[s];r||h.error("Vertex element descriptor is empty!"),(0,c.XP)(this._context,this._locations,i,r)}(0,s.pC)(i)&&(this._context.capabilities.vao?r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,i.glName):this._context.bindBuffer(i))}unbind(){this.initialize();const t=this._context.capabilities.vao;t?t.bindVertexArray(null):this._unbindLayout()}_unbindLayout(){const{_buffers:t,_layout:e}=this;t||h.error("Vertex buffer dictionary is empty!");for(const i in t){const r=t[i];r||h.error("Vertex buffer is uninitialized!");const s=e[i];(0,c.UF)(this._context,this._locations,r,s)}(0,s.pC)(this._indexBuffer)&&this._context.unbindBuffer(this._indexBuffer.bufferType)}}}}]);
//# sourceMappingURL=3086.dfa2f0d1.js.map